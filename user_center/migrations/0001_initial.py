# Generated by Django 2.2.4 on 2020-07-09 02:55

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mandala.auth.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationInfo',
            fields=[
                ('uuid', models.AutoField(primary_key=True, serialize=False)),
                ('province', models.CharField(blank=True, max_length=80, null=True)),
                ('city', models.CharField(blank=True, max_length=80, null=True)),
                ('county', models.CharField(blank=True, max_length=80, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('parent_uuid', models.CharField(blank=True, max_length=40, null=True)),
                ('arg0', models.CharField(blank=True, max_length=50, null=True)),
                ('proshot', models.CharField(blank=True, max_length=255, null=True)),
                ('lname_en', models.CharField(blank=True, max_length=255, null=True)),
                ('lname_ft', models.CharField(blank=True, max_length=255, null=True)),
                ('landmark_word', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': '地域信息',
                'verbose_name_plural': '地域信息',
                'db_table': 'location_info',
            },
        ),
        migrations.CreateModel(
            name='UserLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
                ('model', models.CharField(blank=True, max_length=255, null=True, verbose_name='Model')),
                ('object_id', models.IntegerField(blank=True, null=True)),
                ('object_repr', models.CharField(blank=True, max_length=255, null=True)),
                ('action', models.CharField(blank=True, max_length=255, null=True, verbose_name='动作')),
                ('message', models.CharField(blank=True, max_length=1023, null=True, verbose_name='详情')),
                ('user_id', models.IntegerField(blank=True, null=True, verbose_name='用户ID')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '用户操作记录',
                'verbose_name_plural': '用户操作记录',
                'db_table': 'user_log',
            },
        ),
        migrations.CreateModel(
            name='SiderBar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=255, verbose_name='内容')),
                ('url', models.CharField(max_length=255, verbose_name='URL')),
                ('desc', models.CharField(blank=True, max_length=255, null=True, verbose_name='备注')),
                ('icon', models.CharField(blank=True, default='fa-circle-o', max_length=20, null=True, verbose_name='图标')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='user_center.SiderBar', verbose_name='父标签')),
                ('perm', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.Permission', verbose_name='权限')),
            ],
            options={
                'verbose_name': '侧边栏',
                'verbose_name_plural': '侧边栏',
                'db_table': 'sider_bar',
            },
        ),
        migrations.CreateModel(
            name='UserNew',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('password_md5', models.CharField(default='', max_length=128, verbose_name='老后台密码')),
                ('password', models.CharField(default='pbkdf2_sha256$150000$9ymAEYlhG7YD$tGX8NYcYvCKEo036edfijp2b7AsnF0TvwqUM3PoOA58=', max_length=128, verbose_name='新后台密码')),
                ('avatar', models.CharField(blank=True, default='/static/img/a7.jpg', max_length=255, null=True, verbose_name='头像')),
                ('dtalkid', models.CharField(max_length=50, unique=True)),
                ('frame', models.IntegerField(blank=True, null=True)),
                ('role', models.IntegerField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.IntegerField(blank=True, null=True, verbose_name='用户状态')),
                ('dingframe', models.CharField(blank=True, max_length=255, null=True)),
                ('job', models.IntegerField(default=0)),
                ('position', models.CharField(blank=True, max_length=127, null=True, verbose_name='职位')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('ehr_department_code', models.CharField(blank=True, max_length=150, null=True, verbose_name='ehr_department_code')),
                ('istarshine_id', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='unique_id')),
                ('roles', models.ManyToManyField(blank=True, help_text='The roles this user belongs to. A user will get all permissions granted to each of their roles.', related_name='user_set', related_query_name='user', to='auth.Role', verbose_name='roles')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'support_user_new',
            },
            managers=[
                ('objects', mandala.auth.models.UserManager()),
            ],
        ),
    ]
